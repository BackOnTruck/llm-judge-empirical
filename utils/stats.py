from scipy.stats import pearsonr, kendalltau, spearmanr
from config import HUMAN_RES
from collections import Counter

def stats(a: list, b: list, dataset: str):
    print(f'\n\n--- {dataset} ---')
    print('Spearman:', spearmanr(a, b))
    print('Pearson:', pearsonr(a, b))
    print('Kendall:', kendalltau(a, b))

    diff = sorted(list([p, q] for p, q in Counter([abs(x - y) for x, y in zip(a, b)]).items()))
    for i in range(1, len(diff)):
        diff[i][1] += diff[i-1][1]

    print('Diff in human scores:', diff)

    f_score = f'data/_scoring/{dataset}/{HUMAN_RES}'
    f_cmp = f'data/_comparison/{dataset}/{HUMAN_RES}'

    avg = [(x + y) / 2 for x, y in zip(a, b)]
    with open(f_score, 'w') as fout:
        print(f'Writing to {f_score}...')
        for score in avg:
            print(f'{score:.2f}', file=fout)

    cmp_res, abs_res = [], []
    for i in range(0, len(a), 3):
        for j in range(3):
            for k in range(3):
                if j != k:
                    cmp_res += [avg[i + j] - avg[i + k]]
                    abs_res += [abs(cmp_res[-1])]

    ordered_res = sorted(list([p, q] for p, q in Counter(abs_res).items()))
    for i in range(1, len(ordered_res)):
        ordered_res[i][1] += ordered_res[i-1][1]


    print('Cmp result:', ordered_res)
    with open(f_cmp, 'w') as fout:
        print(f'Writing to {f_cmp}...')
        for res in cmp_res:
            print(f'{res:.2f}', file=fout)

    threshold = 0.5
    win = draw = lose = 0
    for cmp_score in cmp_res:
        if cmp_score >= threshold:
            win += 1

        elif cmp_score <= -threshold:
            lose += 1

        else:
            draw += 1

    print(f'Win = {win}, Lose = {lose}, Draw = {draw}') # win should equal to lose


trans1 = [4.5, 3.5, 4.5, 4.5, 4.5, 3.5, 1.5, 4.5, 4.0, 2.0, 4.5, 4.5, 3.5, 3.5, 4.0, 4.0, 2.5, 4.5, 3.0, 4.0, 3.5, 5.0, 4.5, 5.0, 2.5, 2.5, 3.5, 5.0, 5.0, 5.0, 4.0, 4.5, 5.0, 4.5, 5.0, 5.0, 1.0, 3.0, 4.5, 5.0, 3.5, 4.0, 2.5, 5.0, 5.0, 5.0, 5.0, 5.0, 4.0, 5.0, 5.0, 3.5, 2.0, 4.0, 4.5, 4.0, 4.0, 4.0, 5.0, 4.5, 4.0, 4.0, 4.0, 5.0, 5.0, 5.0, 2.5, 3.5, 3.0, 5.0, 4.5, 4.5, 3.0, 3.5, 5.0, 1.0, 4.0, 3.5, 4.5, 4.5, 2.5, 4.0, 4.5, 4.5, 3.0, 4.5, 4.5, 3.5, 2.5, 5.0, 2.0, 2.5, 3.5, 4.5, 5.0, 5.0, 3.0, 5.0, 5.0, 2.5, 2.5, 4.0, 2.0, 5.0, 3.5, 2.5, 1.5, 5.0, 1.0, 3.5, 1.0, 1.0, 4.0, 1.0, 1.0, 3.5, 4.0, 1.5, 4.0, 2.5, 1.0, 2.5, 3.0, 2.0, 3.0, 4.5, 3.0, 4.5, 4.5, 1.5, 1.5, 3.0, 2.0, 2.5, 2.5, 4.0, 2.5, 3.0, 1.5, 3.5, 5.0, 5.0, 4.5, 4.5, 1.0, 4.0, 4.0, 5.0, 5.0, 4.0]
trans2 = [4.5, 3.0, 4.0, 4.5, 4.5, 4.0, 1.0, 4.0, 4.0, 1.5, 5.0, 5.0, 3.0, 3.5, 3.5, 4.0, 1.0, 4.0, 3.5, 4.0, 3.5, 5.0, 4.0, 4.5, 3.0, 3.0, 4.0, 5.0, 5.0, 5.0, 4.5, 4.0, 4.5, 3.5, 4.5, 5.0, 1.0, 3.5, 4.5, 3.5, 3.0, 4.0, 3.5, 3.5, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 4.0, 3.0, 3.5, 4.5, 4.5, 4.5, 3.5, 4.5, 4.0, 4.0, 4.0, 4.0, 4.5, 4.0, 4.5, 3.5, 4.0, 4.0, 5.0, 4.0, 4.0, 3.5, 3.5, 5.0, 1.5, 4.0, 4.0, 4.0, 4.0, 2.0, 4.0, 3.5, 4.0, 4.0, 4.5, 4.5, 4.0, 3.0, 4.5, 3.0, 4.0, 3.5, 4.5, 4.5, 4.5, 4.0, 5.0, 5.0, 1.5, 2.5, 4.0, 3.0, 4.0, 4.5, 3.0, 2.5, 4.0, 2.0, 3.5, 1.0, 1.0, 3.5, 1.0, 2.0, 2.5, 3.0, 2.5, 3.5, 3.0, 1.5, 2.5, 2.5, 3.5, 4.0, 4.0, 4.0, 4.5, 4.5, 1.0, 2.0, 2.5, 1.5, 2.0, 4.0, 3.5, 3.0, 3.0, 2.5, 3.5, 4.5, 4.5, 4.5, 4.5, 2.0, 4.0, 4.0, 4.5, 4.5, 4.5]
stats(trans1, trans2, 'codetransocean')

gen1 = [3.5, 4.5, 4.5, 3.5, 4.5, 4.5, 2.5, 4, 5, 2.5, 2, 3.5, 2.5, 3.5, 3, 1, 1.5, 1.5, 2, 2.5, 2.5, 4, 2, 4, 3.5, 1, 4.5, 4, 3.5, 4, 1, 1, 3.5, 1, 1, 1, 2.5, 3, 4.5, 3.5, 1, 4, 1, 3, 1, 3, 3, 2.5, 3.5, 4, 4, 1.5, 3.5, 1, 1, 1, 2.5, 4, 2.5, 2, 4, 2, 2.5, 3, 2, 3, 3.5, 3, 5, 4, 3, 2, 5, 5, 5, 3.5, 5, 2.5, 2, 4, 4, 2.5, 4.5, 4.5, 3.5, 5, 5, 4, 5, 3, 5, 3.5, 4.5, 5, 4, 5, 4.5, 3.5, 4.5, 4.5, 3.5, 4, 4.5, 3, 4, 5, 5, 5, 2, 3.5, 2, 4, 3, 3.5, 5, 4.5, 4.5, 4.5, 1.5, 4, 1.5, 3, 2.5, 4, 4.5, 4, 2.5, 3.5, 3.5, 4, 4, 5, 3.5, 2.5, 4, 3.5, 4.5, 4, 2.5, 1.5, 2.5, 1.5, 1, 2.5, 4.5, 5, 5, 3.5, 3.5, 3.5]
gen2 = [4, 4, 4.5, 4, 4.5, 4, 3.5, 3.5, 5, 3.5, 2.5, 4, 2.5, 3.5, 3, 1.5, 2, 2, 3, 2, 3, 4, 3, 4, 3.5, 1, 4, 4, 4, 4.5, 1, 1, 3, 1, 1, 1, 3, 3.5, 3.5, 3.5, 1, 3.5, 1, 2, 1, 3.5, 3, 2.5, 3.5, 3.5, 3.5, 2, 3, 1.5, 1.5, 1, 3, 3, 2.5, 3, 3, 2.5, 2.5, 3.5, 3, 3.5, 4, 3.5, 5, 3.5, 3, 2.5, 5, 5, 5, 4, 4.5, 3.5, 4.5, 3.5, 4.5, 4, 4, 3, 3, 5, 5, 4, 4, 3.5, 3, 3.5, 4, 5, 5, 5, 5, 5, 5, 5, 4.5, 5, 4.5, 3, 4, 5, 5, 5, 4, 5, 4, 4.5, 4, 4.5, 5, 5, 5, 4.5, 3, 5, 1, 4, 2, 5, 5, 5, 1, 2.5, 1.5, 2.5, 3, 3, 3, 4, 2.5, 3, 4, 4.5, 2.5, 1, 4, 3.5, 1, 2, 4, 4.5, 4.5, 4, 3.5, 4]
stats(gen1, gen2, 'complexcodeeval')

sum1 = [4, 2.5, 3.5, 4.5, 4.5, 4, 2.5, 3, 3, 2.5, 3.5, 4, 4, 4, 3.5, 5, 4.5, 3.5, 4.5, 4, 4.5, 5, 4.5, 3.5, 2.5, 2.5, 4, 2.5, 5, 4, 3.5, 3, 3.5, 3.5, 3, 4, 3.5, 3, 3, 5, 4.5, 4, 4, 4.5, 5, 3, 4, 5, 5, 3.5, 3.5, 3, 2.5, 4.5, 3.5, 5, 4.5, 4, 2.5, 3.5, 4.5, 5, 4.5, 3.5, 4.5, 4.5, 3.5, 4, 4, 3, 5, 5, 4, 3, 4, 4, 5, 3.5, 3, 5, 3.5, 5, 4.5, 4.5, 3.5, 2.5, 4, 5, 4.5, 4.5, 1.5, 4, 4.5, 4.5, 3.5, 3, 3.5, 3.5, 2.5, 4, 4.5, 3, 2, 5, 4, 3.5, 3.5, 2.5, 5, 3.5, 5, 3.5, 4.5, 5, 4.5, 4.5, 5, 4, 2.5, 3.5, 4.5, 4.5, 3.5, 4.5, 4, 3.5, 4, 4.5, 3, 3, 4, 4.5, 3.5, 2.5, 3, 2.5, 3.5, 2, 4.5, 5, 3.5, 4.5, 4.5, 3.5, 3, 3.5, 2.5, 4, 4, 4]
sum2 = [3, 3, 3.5, 4.5, 4, 4, 2, 2.5, 3, 3.5, 3, 4, 3.5, 4, 4, 4.5, 4, 3.5, 4, 3.5, 4.5, 4.5, 4.5, 3.5, 2.5, 3, 4, 3.5, 5, 3, 2.5, 2.5, 3.5, 4, 3, 3.5, 3.5, 3, 3, 4.5, 4, 3.5, 4, 4, 4.5, 3, 4, 5, 4.5, 3, 3.5, 3, 2.5, 4, 3.5, 4.5, 4, 4, 3, 3.5, 4, 5, 4.5, 3.5, 4, 3.5, 3.5, 4.5, 4.5, 4, 4.5, 5, 4, 3, 4.5, 4.5, 4.5, 3, 3.5, 4.5, 4.5, 4, 5, 3.5, 4.5, 3, 4.5, 5, 4.5, 5, 3, 4.5, 4, 5, 4, 3.5, 4, 4, 3, 4.5, 5, 4.5, 3, 5, 3.5, 4, 4, 4, 5, 5, 5, 4, 5, 5, 5, 5, 5, 4, 3, 3.5, 5, 5, 5, 4.5, 3.5, 4, 4.5, 5, 3.5, 3.5, 5, 5, 4, 3, 4.5, 3, 4, 3.5, 5, 5, 4, 5, 5, 4, 4, 4, 3, 5, 4.5, 4.5]
stats(sum1, sum2, 'codexglue')
